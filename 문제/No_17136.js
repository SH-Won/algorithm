// const input = ['0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0']
// const input = [
//     '0 0 0 0 0 0 0 0 0 0',
// '0 1 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 1 0 0 0 0 0',
// '0 0 0 0 0 1 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ]
// const input = [
//     '0 0 0 0 0 0 0 0 0 0',
// '0 1 1 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 1 1 0 0 0 0',
// '0 0 0 0 1 1 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ]
// const input = [
//     '0 0 0 0 0 0 0 0 0 0',
// '0 1 1 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 1 1 0 0 0 0',
// '0 0 0 0 0 1 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ]
// const input = [
// '0 0 0 0 0 0 0 0 0 0',
// '0 1 1 0 0 0 0 0 0 0',
// '0 1 1 1 0 0 0 0 0 0',
// '0 0 1 1 1 1 1 0 0 0',
// '0 0 0 1 1 1 1 0 0 0',
// '0 0 0 0 1 1 1 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ]
// const input =[
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1'
// ]
// const input = [
// '0 0 0 0 0 0 0 0 0 0',
// '0 1 1 1 1 1 0 0 0 0',
// '0 1 1 1 1 1 0 0 0 0',
// '0 0 1 1 1 1 0 0 0 0',
// '0 0 1 1 1 1 0 0 0 0',
// '0 1 1 1 1 1 1 1 1 1',
// '0 1 1 1 0 1 1 1 1 1',
// '0 1 1 1 0 1 1 1 1 1',
// '0 0 0 0 0 1 1 1 1 1',
// '0 0 0 0 0 1 1 1 1 1',
// ]
// const input = [
// '0 0 0 0 0 0 0 0 0 0',
// '1 1 1 1 1 0 0 0 0 0',
// '1 1 1 1 1 0 1 1 1 1',
// '1 1 1 1 1 0 1 1 1 1',
// '1 1 1 1 1 0 1 1 1 1',
// '1 1 1 1 1 0 1 1 1 1',
// '0 0 0 0 0 0 0 0 0 0',
// '0 1 1 1 0 1 1 0 0 0',
// '0 1 1 1 0 1 1 0 0 0',
// '0 1 1 1 0 0 0 0 0 1',
// ]
// const input = [
// '1 1 1 1 1 0 0 0 0 0',
// '0 0 0 0 0 1 1 0 1 1',
// '1 1 0 1 1 1 1 0 1 1',
// '1 1 0 1 1 0 0 1 1 1',
// '1 1 1 0 0 0 0 1 1 1',
// '1 1 1 1 1 1 0 1 1 1',
// '1 1 1 1 1 1 0 0 1 1',
// '0 0 0 1 1 1 0 0 1 1',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ] // ans 13
// const input = [
// '1 1 1 1 1 1 1 1 1 1',
// '1 1 1 1 1 1 1 1 1 1',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '1 0 1 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '1 1 1 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ]// ans -1 
// const input = [
// '1 1 1 1 1 1 0 0 0 0',
// '1 1 1 1 1 1 0 0 0 0',
// '1 1 1 1 1 1 0 0 0 0',
// '1 1 1 1 1 1 0 0 0 0',
// '1 1 1 1 1 1 0 0 0 0',
// '1 1 1 1 1 1 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0'
// ] //ans 4
// const input = [
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '0 0 0 0 0 0 0 0 0 0',
//     '0 0 0 0 0 0 0 0 0 0'
// ] //ans 6
// const fs = require('fs');
// const input = fs.readFileSync('/dev/stdin').toString().trim().split('\n').map(row => row.split(' ').map(Number));

const papering = (i,j,paper,size,map) =>{
    for(let y=i; y<i+size; y++){
        for(let x=j; x<j+size; x++) map[y][x] = paper;
    }
}
const check = (i,j,size,map) =>{
    for(let y = i; y < i+size; y++){
        for(let x =j; x<j+size; x++){
            if(y >= 10 || x >=10 || !map[y][x] ) return false;
        }
    }
    return true;
}
const solution = map =>{
    map = map.map(row => row.split(' ').map(Number));
    const paper = [null,5,5,5,5,5];
    let min = Infinity;
    const attachPaper = (y,x,paperCount) =>{
        if(paperCount >= min) return;
        if(y >= 10){
            min = Math.min(paperCount,min);
            return;
        }
        if(x >= 10) return attachPaper(y+1,0,paperCount);

        if(map[y][x]){
            for(let size = 5; size >= 1; size--){
                if(paper[size] && check(y,x,size,map)){
                   paper[size]--;
                   papering(y,x,0,size,map);
                   attachPaper(y,x+size,paperCount+1);
                   papering(y,x,1,size,map);
                   paper[size]++;
                }
            }
        }
        else attachPaper(y,x+1,paperCount);
    }
    attachPaper(0,0,0);
    min === Infinity ? console.log(-1) : console.log(min);
}
solution(input);
