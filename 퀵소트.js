// const fs = require('fs');
// const [N,...arr] = fs.readFileSync('/dev/stdin').toString().split('\n').map(num => parseInt(num));
console.time('quick');
const arr = [10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7,
    10, 5, 2, 0, 3, 1, 4, 2, 3, 5, 1, 7];

function quickSort(arr){
    return sort(arr,0,arr.length-1);
}
function sort(arr,left,right){
    if(arr.length < 2) return arr;

    const index = partition(arr,left,right);
    if(left < index-1) sort(arr,left,index-1)
    if(right > index) sort(arr,index,right)

    return arr;
}
function partition(arr,left,right){
    const mid = Math.floor((left+right) / 2);
    const pivot = arr[mid];

    while(left <= right){
        while(arr[left] < pivot) left++;
        while(arr[right] > pivot) right--;

        if(left <=right){
            swap(arr,left,right);
            left++;
            right--;
        }
    }
    return left;

}
function swap(arr,left,right){
    return [arr[left],arr[right]] = [arr[right],arr[left]]
}
console.log(quickSort(arr).join('\n'));
console.timeEnd('quick');