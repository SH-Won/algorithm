// const input = ['0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0','0 0 0 0 0 0 0 0 0 0']
// const input = [
//     '0 0 0 0 0 0 0 0 0 0',
// '0 1 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 1 0 0 0 0 0',
// '0 0 0 0 0 1 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ]
// const input = [
//     '0 0 0 0 0 0 0 0 0 0',
// '0 1 1 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 1 1 0 0 0 0',
// '0 0 0 0 1 1 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ]
// const input = [
//     '0 0 0 0 0 0 0 0 0 0',
// '0 1 1 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 1 1 0 0 0 0',
// '0 0 0 0 0 1 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ]
// const input = [
// '0 0 0 0 0 0 0 0 0 0',
// '0 1 1 0 0 0 0 0 0 0',
// '0 1 1 1 0 0 0 0 0 0',
// '0 0 1 1 1 1 1 0 0 0',
// '0 0 0 1 1 1 1 0 0 0',
// '0 0 0 0 1 1 1 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ]
// const input =[
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1',
//     '1 1 1 1 1 1 1 1 1 1'
// ]
// const input = [
// '0 0 0 0 0 0 0 0 0 0',
// '0 1 1 1 1 1 0 0 0 0',
// '0 1 1 1 1 1 0 0 0 0',
// '0 0 1 1 1 1 0 0 0 0',
// '0 0 1 1 1 1 0 0 0 0',
// '0 1 1 1 1 1 1 1 1 1',
// '0 1 1 1 0 1 1 1 1 1',
// '0 1 1 1 0 1 1 1 1 1',
// '0 0 0 0 0 1 1 1 1 1',
// '0 0 0 0 0 1 1 1 1 1',
// ]
// const input = [
// '0 0 0 0 0 0 0 0 0 0',
// '1 1 1 1 1 0 0 0 0 0',
// '1 1 1 1 1 0 1 1 1 1',
// '1 1 1 1 1 0 1 1 1 1',
// '1 1 1 1 1 0 1 1 1 1',
// '1 1 1 1 1 0 1 1 1 1',
// '0 0 0 0 0 0 0 0 0 0',
// '0 1 1 1 0 1 1 0 0 0',
// '0 1 1 1 0 1 1 0 0 0',
// '0 1 1 1 0 0 0 0 0 1',
// ]
// const input = [
// '1 1 1 1 1 0 0 0 0 0',
// '0 0 0 0 0 1 1 0 1 1',
// '1 1 0 1 1 1 1 0 1 1',
// '1 1 0 1 1 0 0 1 1 1',
// '1 1 1 0 0 0 0 1 1 1',
// '1 1 1 1 1 1 0 1 1 1',
// '1 1 1 1 1 1 0 0 1 1',
// '0 0 0 1 1 1 0 0 1 1',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ] // ans 13
// const input = [
// '1 1 1 1 1 1 1 1 1 1',
// '1 1 1 1 1 1 1 1 1 1',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '1 0 1 0 0 0 0 0 0 0',
// '0 0 1 0 0 0 0 0 0 0',
// '1 1 1 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// ]  // ans -1 
// const input = [
// '1 1 1 1 1 1 0 0 0 0',
// '1 1 1 1 1 1 0 0 0 0',
// '1 1 1 1 1 1 0 0 0 0',
// '1 1 1 1 1 1 0 0 0 0',
// '1 1 1 1 1 1 0 0 0 0',
// '1 1 1 1 1 1 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0',
// '0 0 0 0 0 0 0 0 0 0'
// ] //ans 4
// const input = [
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '1 1 1 1 1 1 0 0 0 0',
//     '0 0 0 0 0 0 0 0 0 0',
//     '0 0 0 0 0 0 0 0 0 0'
// ] //ans 6

const fs = require('fs');
const input = fs.readFileSync('/dev/stdin').toString().trim().split('\n');
const check = (y1,x1,y2,x2,map) =>{
    for(let y=y1; y<y2; y++){
        for(let x=x1; x<x2; x++){
            if(map[y][x] === 0) return false;
        }
    }
    return true;
}
const papering = (y1,x1,y2,x2,map,paper) =>{
    for(let y=y1; y<y2; y++){
        for(let x=x1; x<x2; x++){
            map[y][x] = paper;
        }
    }
}
const getMinPaper = (map) =>{
    let min = Infinity;
    let paper = [0,5,5,5,5,5];
    const isValidPos = (y,x) => (y>=0 && x>=0 && y<10 && x<10);
    const putPaper = (index,use) =>{
        if(use >= min) return;
        if(index >=100){
            min = Math.min(min,use);
            return;
        }
         const [y,x] = [index/10 >>0 , index % 10];
         if(map[y][x] === 0) return putPaper(index+1,use);
         else{
          for(let size=5; size>=1; size--){
            if(!paper[size] || !isValidPos(y+size-1,x+size-1) || !check(y,x,y+size,x+size,map)) continue;
            papering(y,x,y+size,x+size,map,0);
            paper[size]--;
            putPaper(index+size,use+1);
            papering(y,x,y+size,x+size,map,1);
            paper[size]++;
          }
        }
    }
    putPaper(0,0);
    return min === Infinity ? -1 : min;
}
const solution = (input)=>{
    const map = input.map(row => row.split(' ').map(Number));
    const answer = getMinPaper(map);
    console.log(answer);
}
solution(input);
